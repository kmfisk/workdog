package com.github.kmfisk.workdog.client.model.entity;

import com.github.kmfisk.workdog.entity.BorderCollieEntity;
import com.google.common.collect.ImmutableList;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.minecraft.client.model.ModelPart;
import net.minecraft.client.render.entity.model.CompositeEntityModel;

/**
 * BorderCollie - fisk
 * Created using Tabula 7.1.0
 */
@Environment(EnvType.CLIENT)
public class BorderCollieModel<T extends BorderCollieEntity> extends CompositeEntityModel<T> {
    private final ModelPart Chest;
    private final ModelPart Body;
    private final ModelPart Neck;
    private final ModelPart ArmBaseLeft;
    private final ModelPart ArmBaseRight;
    private final ModelPart ChestFur;
    private final ModelPart Hips;
    private final ModelPart BellyFur;
    private final ModelPart HarnessHandle;
    private final ModelPart ThighLeft;
    private final ModelPart ThighRight;
    private final ModelPart Tail1;
    private final ModelPart UpperLegLeft;
    private final ModelPart LowerLegLeft;
    private final ModelPart FootLeft;
    private final ModelPart UpperLegRight;
    private final ModelPart LowerLegRight;
    private final ModelPart FootRight;
    private final ModelPart Tail2;
    private final ModelPart TailFur1;
    private final ModelPart TailFur2;
    private final ModelPart Head;
    private final ModelPart NeckLower;
    private final ModelPart Collar;
    private final ModelPart NeckFurLeft;
    private final ModelPart NeckFurRight;
    private final ModelPart NeckFur2;
    private final ModelPart Snout;
    private final ModelPart EarLeft;
    private final ModelPart EarRight;
    private final ModelPart FaceFurLeft;
    private final ModelPart FaceFurRight;
    private final ModelPart TopSnout;
    private final ModelPart Mouth;
    private final ModelPart Muzzle;
    private final ModelPart Tongue;
    private final ModelPart EarFlapLeft;
    private final ModelPart EarFlapRight;
    private final ModelPart ArmLeft;
    private final ModelPart ArmFurLeft;
    private final ModelPart ForearmLeft;
    private final ModelPart HandLeft;
    private final ModelPart ArmRight;
    private final ModelPart ArmFurRight;
    private final ModelPart ForearmRight;
    private final ModelPart HandRight;

    public BorderCollieModel() {
        this.textureWidth = 64;
        this.textureHeight = 128;
        this.EarFlapRight = new ModelPart(this, 28, 53);
        this.EarFlapRight.mirror = true;
        this.EarFlapRight.setPivot(0.0F, -3.0F, 1.0F);
        this.EarFlapRight.addCuboid(-1.0F, 0.0F, -2.0F, 2, 1, 2, 0.0F);
        this.setRotateAngle(EarFlapRight, -0.27314402793711257F, 0.0F, 0.0F);
        this.HandLeft = new ModelPart(this, 28, 16);
        this.HandLeft.setPivot(-0.1F, 2.0F, 2.4F);
        this.HandLeft.addCuboid(-1.0F, -1.0F, -3.0F, 2, 2, 2, 0.0F);
        this.setRotateAngle(HandLeft, 0.091106186954104F, 0.0F, 0.0F);
        this.ArmLeft = new ModelPart(this, 27, 7);
        this.ArmLeft.setPivot(0.0F, 3.8F, 0.5F);
        this.ArmLeft.addCuboid(-1.0F, 0.0F, -2.0F, 2, 3, 2, 0.0F);
        this.setRotateAngle(ArmLeft, -0.045553093477052F, 0.0F, 0.0F);
        this.ArmBaseRight = new ModelPart(this, 36, 0);
        this.ArmBaseRight.mirror = true;
        this.ArmBaseRight.setPivot(-2.2F, 1.3F, 0.0F);
        this.ArmBaseRight.addCuboid(-1.5F, 0.0F, -2.0F, 3, 4, 3, 0.0F);
        this.setRotateAngle(ArmBaseRight, 0.136659280431156F, 0.0F, 0.0F);
        this.Tongue = new ModelPart(this, -3, 49);
        this.Tongue.setPivot(0.0F, -1.0F, 0.8F);
        this.Tongue.addCuboid(-1.0F, 0.0F, -3.0F, 2, 0, 3, 0.0F);
        this.setRotateAngle(Tongue, -0.045553093477052F, 0.0F, 0.0F);
        this.NeckFur2 = new ModelPart(this, 41, 95);
        this.NeckFur2.setPivot(0.0F, -0.5F, -5.0F);
        this.NeckFur2.addCuboid(-1.5F, 0.0F, 0.0F, 3, 3, 3, 0.0F);
        this.setRotateAngle(NeckFur2, -0.4553564018453205F, 0.0F, 0.0F);
        this.TailFur2 = new ModelPart(this, 44, 66);
        this.TailFur2.setPivot(0.0F, 0.0F, 0.2F);
        this.TailFur2.addCuboid(-1.5F, -1.0F, -2.5F, 3, 8, 4, 0.0F);
        this.Muzzle = new ModelPart(this, 0, 70);
        this.Muzzle.setPivot(0.0F, -1.0F, 0.0F);
        this.Muzzle.addCuboid(-2.0F, 0.0F, -3.3F, 4, 4, 4, 0.0F);
        this.setRotateAngle(Muzzle, 0.091106186954104F, 0.0F, 0.0F);
        this.ArmFurRight = new ModelPart(this, 38, 20);
        this.ArmFurRight.mirror = true;
        this.ArmFurRight.setPivot(0.4F, 1.6F, -0.6F);
        this.ArmFurRight.addCuboid(-1.5F, -1.0F, 0.0F, 3, 5, 3, 0.0F);
        this.setRotateAngle(ArmFurRight, 0.22759093446006054F, 0.0F, 0.0F);
        this.LowerLegLeft = new ModelPart(this, 32, 46);
        this.LowerLegLeft.setPivot(0.0F, 4.0F, 2.7F);
        this.LowerLegLeft.addCuboid(-1.0F, 0.0F, -2.0F, 2, 4, 2, 0.0F);
        this.setRotateAngle(LowerLegLeft, -0.6829473363053812F, 0.0F, 0.0F);
        this.EarFlapLeft = new ModelPart(this, 20, 53);
        this.EarFlapLeft.setPivot(0.0F, -3.0F, 1.0F);
        this.EarFlapLeft.addCuboid(-1.0F, 0.0F, -2.0F, 2, 1, 2, 0.0F);
        this.setRotateAngle(EarFlapLeft, -0.27314402793711257F, 0.0F, 0.0F);
        this.NeckFurRight = new ModelPart(this, 47, 86);
        this.NeckFurRight.mirror = true;
        this.NeckFurRight.setPivot(-0.4F, -4.2F, -3.2F);
        this.NeckFurRight.addCuboid(-1.5F, 0.0F, 0.0F, 3, 4, 4, 0.0F);
        this.setRotateAngle(NeckFurRight, -0.5918411493512771F, -0.136659280431156F, 0.0F);
        this.ArmBaseLeft = new ModelPart(this, 24, 0);
        this.ArmBaseLeft.setPivot(2.2F, 1.3F, 0.0F);
        this.ArmBaseLeft.addCuboid(-1.5F, 0.0F, -2.0F, 3, 4, 3, 0.0F);
        this.setRotateAngle(ArmBaseLeft, 0.136659280431156F, 0.0F, 0.0F);
        this.LowerLegRight = new ModelPart(this, 48, 46);
        this.LowerLegRight.mirror = true;
        this.LowerLegRight.setPivot(0.0F, 4.0F, 2.7F);
        this.LowerLegRight.addCuboid(-1.0F, 0.0F, -2.0F, 2, 4, 2, 0.0F);
        this.setRotateAngle(LowerLegRight, -0.6829473363053812F, 0.0F, 0.0F);
        this.FaceFurLeft = new ModelPart(this, 32, 79);
        this.FaceFurLeft.setPivot(1.6F, 0.4F, -0.9F);
        this.FaceFurLeft.addCuboid(-1.5F, 0.0F, -2.0F, 3, 3, 4, 0.0F);
        this.setRotateAngle(FaceFurLeft, 0.136659280431156F, 0.18203784098300857F, 0.0F);
        this.ArmRight = new ModelPart(this, 38, 7);
        this.ArmRight.mirror = true;
        this.ArmRight.setPivot(0.0F, 3.8F, 0.5F);
        this.ArmRight.addCuboid(-1.0F, 0.0F, -2.0F, 2, 3, 2, 0.0F);
        this.setRotateAngle(ArmRight, -0.045553093477052F, 0.0F, 0.0F);
        this.Head = new ModelPart(this, 0, 48);
        this.Head.setPivot(0.0F, -5.2F, -0.2F);
        this.Head.addCuboid(-2.5F, -2.5F, -2.5F, 5, 5, 5, 0.0F);
        this.setRotateAngle(Head, -0.5918411493512771F, 0.0F, 0.0F);
        this.Body = new ModelPart(this, 0, 12);
        this.Body.setPivot(0.0F, -3.5F, 1.9F);
        this.Body.addCuboid(-3.0F, 0.0F, 0.0F, 6, 7, 7, 0.0F);
        this.setRotateAngle(Body, 0.045553093477052F, 0.0F, 0.0F);
        this.NeckLower = new ModelPart(this, 18, 40);
        this.NeckLower.setPivot(0.0F, -4.8F, -2.8F);
        this.NeckLower.addCuboid(-1.5F, 0.0F, 0.0F, 3, 6, 2, 0.0F);
        this.setRotateAngle(NeckLower, -0.136659280431156F, 0.0F, 0.0F);
        this.BellyFur = new ModelPart(this, 17, 64);
        this.BellyFur.setPivot(0.0F, 6.6F, -1.0F);
        this.BellyFur.addCuboid(-2.5F, 0.0F, 0.0F, 5, 3, 8, 0.0F);
        this.setRotateAngle(BellyFur, 0.18203784098300857F, 0.0F, 0.0F);
        this.HarnessHandle = new ModelPart(this, 0, 81);
        this.HarnessHandle.setPivot(0.0F, -2.0F, 1.5F);
        this.HarnessHandle.addCuboid(-2.5F, 0.0F, 0.0F, 5, 3, 2, 0.0F);
        this.setRotateAngle(HarnessHandle, -0.27314402793711257F, 0.0F, 0.0F);
        this.Tail2 = new ModelPart(this, 49, 7);
        this.Tail2.setPivot(0.0F, 4.0F, -1.0F);
        this.Tail2.addCuboid(-1.0F, 0.0F, 0.0F, 2, 4, 2, 0.0F);
        this.setRotateAngle(Tail2, 0.27314402793711257F, 0.0F, 0.0F);
        this.FootRight = new ModelPart(this, 48, 52);
        this.FootRight.mirror = true;
        this.FootRight.setPivot(0.1F, 4.0F, -0.9F);
        this.FootRight.addCuboid(-1.0F, -1.0F, -2.0F, 2, 2, 2, 0.0F);
        this.FootLeft = new ModelPart(this, 36, 52);
        this.FootLeft.setPivot(-0.1F, 4.0F, -0.9F);
        this.FootLeft.addCuboid(-1.0F, -1.0F, -2.0F, 2, 2, 2, 0.0F);
        this.Tail1 = new ModelPart(this, 49, 0);
        this.Tail1.setPivot(0.0F, 1.5F, 3.5F);
        this.Tail1.addCuboid(-1.0F, 0.0F, -1.0F, 2, 4, 2, 0.0F);
        this.setRotateAngle(Tail1, 1.2747884856566583F, 0.0F, 0.0F);
        this.Snout = new ModelPart(this, 0, 58);
        this.Snout.setPivot(0.0F, 0.0F, -2.5F);
        this.Snout.addCuboid(-1.5F, 0.0F, -2.7F, 3, 2, 3, 0.0F);
        this.setRotateAngle(Snout, -0.045553093477052F, 0.0F, 0.0F);
        this.EarRight = new ModelPart(this, 21, 48);
        this.EarRight.mirror = true;
        this.EarRight.setPivot(-1.7F, -0.7F, 0.0F);
        this.EarRight.addCuboid(-1.0F, -3.0F, 0.0F, 2, 4, 1, 0.0F);
        this.setRotateAngle(EarRight, 0.0F, 0.31869712141416456F, -0.22759093446006054F);
        this.Neck = new ModelPart(this, 0, 37);
        this.Neck.setPivot(0.0F, -0.9F, -0.3F);
        this.Neck.addCuboid(-2.0F, -5.0F, -2.5F, 4, 6, 5, 0.0F);
        this.setRotateAngle(Neck, 0.7285004297824331F, 0.0F, 0.0F);
        this.HandRight = new ModelPart(this, 38, 16);
        this.HandRight.mirror = true;
        this.HandRight.setPivot(-0.1F, 2.0F, 2.4F);
        this.HandRight.addCuboid(-1.0F, -1.0F, -3.0F, 2, 2, 2, 0.0F);
        this.setRotateAngle(HandRight, 0.091106186954104F, 0.0F, 0.0F);
        this.Hips = new ModelPart(this, 0, 26);
        this.Hips.setPivot(0.0F, 0.0F, 7.0F);
        this.Hips.addCuboid(-3.5F, 0.0F, 0.0F, 7, 7, 4, 0.0F);
        this.setRotateAngle(Hips, -0.136659280431156F, 0.0F, 0.0F);
        this.UpperLegRight = new ModelPart(this, 46, 39);
        this.UpperLegRight.mirror = true;
        this.UpperLegRight.setPivot(0.0F, 6.0F, -1.8F);
        this.UpperLegRight.addCuboid(-1.5F, 0.0F, 0.0F, 3, 4, 3, 0.0F);
        this.setRotateAngle(UpperLegRight, 0.6373942428283291F, 0.0F, 0.0F);
        this.ThighLeft = new ModelPart(this, 28, 29);
        this.ThighLeft.setPivot(2.0F, 1.7F, 1.9F);
        this.ThighLeft.addCuboid(-2.0F, 0.0F, -2.0F, 4, 6, 4, 0.0F);
        this.setRotateAngle(ThighLeft, 0.18203784098300857F, 0.0F, 0.0F);
        this.ThighRight = new ModelPart(this, 44, 29);
        this.ThighRight.mirror = true;
        this.ThighRight.setPivot(-2.0F, 1.7F, 1.9F);
        this.ThighRight.addCuboid(-2.0F, 0.0F, -2.0F, 4, 6, 4, 0.0F);
        this.setRotateAngle(ThighRight, 0.18203784098300857F, 0.0F, 0.0F);
        this.NeckFurLeft = new ModelPart(this, 32, 86);
        this.NeckFurLeft.setPivot(0.4F, -4.2F, -3.2F);
        this.NeckFurLeft.addCuboid(-1.5F, 0.0F, 0.0F, 3, 4, 4, 0.0F);
        this.setRotateAngle(NeckFurLeft, -0.5918411493512771F, 0.136659280431156F, 0.0F);
        this.TailFur1 = new ModelPart(this, 44, 57);
        this.TailFur1.setPivot(0.0F, 0.0F, -1.4F);
        this.TailFur1.addCuboid(-2.0F, 0.0F, -3.0F, 4, 4, 4, 0.0F);
        this.Mouth = new ModelPart(this, 22, 59);
        this.Mouth.setPivot(0.0F, 2.4F, 0.0F);
        this.Mouth.addCuboid(-1.0F, -1.0F, -2.5F, 2, 1, 3, 0.0F);
        this.ForearmRight = new ModelPart(this, 38, 12);
        this.ForearmRight.mirror = true;
        this.ForearmRight.setPivot(0.0F, 2.6F, -2.0F);
        this.ForearmRight.addCuboid(-1.0F, 0.0F, 0.0F, 2, 2, 2, 0.0F);
        this.setRotateAngle(ForearmRight, -0.136659280431156F, 0.0F, 0.0F);
        this.UpperLegLeft = new ModelPart(this, 29, 39);
        this.UpperLegLeft.setPivot(0.0F, 6.0F, -1.8F);
        this.UpperLegLeft.addCuboid(-1.5F, 0.0F, 0.0F, 3, 4, 3, 0.0F);
        this.setRotateAngle(UpperLegLeft, 0.6373942428283291F, 0.0F, 0.0F);
        this.ArmFurLeft = new ModelPart(this, 26, 20);
        this.ArmFurLeft.setPivot(-0.3F, 1.6F, -0.6F);
        this.ArmFurLeft.addCuboid(-1.5F, -1.0F, 0.0F, 3, 5, 3, 0.0F);
        this.setRotateAngle(ArmFurLeft, 0.22759093446006054F, 0.0F, 0.0F);
        this.Chest = new ModelPart(this, 0, 0);
        this.Chest.setPivot(0.0F, 13.0F, -4.0F);
        this.Chest.addCuboid(-3.5F, -3.5F, -2.5F, 7, 7, 5, 0.0F);
        this.setRotateAngle(Chest, -0.045553093477052F, 0.0F, 0.0F);
        this.FaceFurRight = new ModelPart(this, 46, 79);
        this.FaceFurRight.mirror = true;
        this.FaceFurRight.setPivot(-1.6F, 0.4F, -0.9F);
        this.FaceFurRight.addCuboid(-1.5F, 0.0F, -2.0F, 3, 3, 4, 0.0F);
        this.setRotateAngle(FaceFurRight, 0.136659280431156F, -0.18203784098300857F, 0.0F);
        this.ChestFur = new ModelPart(this, 13, 76);
        this.ChestFur.setPivot(0.0F, 3.3F, -2.5F);
        this.ChestFur.addCuboid(-2.5F, 0.0F, 0.0F, 5, 3, 4, 0.0F);
        this.setRotateAngle(ChestFur, 0.31869712141416456F, 0.0F, 0.0F);
        this.EarLeft = new ModelPart(this, 15, 48);
        this.EarLeft.setPivot(1.7F, -0.7F, 0.0F);
        this.EarLeft.addCuboid(-1.0F, -3.0F, 0.0F, 2, 4, 1, 0.0F);
        this.setRotateAngle(EarLeft, 0.0F, -0.31869712141416456F, 0.22759093446006054F);
        this.ForearmLeft = new ModelPart(this, 28, 12);
        this.ForearmLeft.setPivot(0.0F, 2.6F, -2.0F);
        this.ForearmLeft.addCuboid(-1.0F, 0.0F, 0.0F, 2, 2, 2, 0.0F);
        this.setRotateAngle(ForearmLeft, -0.136659280431156F, 0.0F, 0.0F);
        this.TopSnout = new ModelPart(this, 12, 58);
        this.TopSnout.setPivot(0.0F, -0.3F, -3.0F);
        this.TopSnout.addCuboid(-1.0F, 0.0F, 0.0F, 2, 2, 3, 0.0F);
        this.setRotateAngle(TopSnout, 0.18203784098300857F, 0.0F, 0.0F);
        this.Collar = new ModelPart(this, 0, 63);
        this.Collar.setPivot(0.0F, -2.7F, -0.8F);
        this.Collar.addCuboid(-2.5F, 0.0F, -2.5F, 5, 1, 6, 0.0F);
        this.EarRight.addChild(this.EarFlapRight);
        this.ForearmLeft.addChild(this.HandLeft);
        this.ArmBaseLeft.addChild(this.ArmLeft);
        this.Chest.addChild(this.ArmBaseRight);
        this.Mouth.addChild(this.Tongue);
        this.Neck.addChild(this.NeckFur2);
        this.Tail2.addChild(this.TailFur2);
        this.Snout.addChild(this.Muzzle);
        this.ArmBaseRight.addChild(this.ArmFurRight);
        this.UpperLegLeft.addChild(this.LowerLegLeft);
        this.EarLeft.addChild(this.EarFlapLeft);
        this.Neck.addChild(this.NeckFurRight);
        this.Chest.addChild(this.ArmBaseLeft);
        this.UpperLegRight.addChild(this.LowerLegRight);
        this.Head.addChild(this.FaceFurLeft);
        this.ArmBaseRight.addChild(this.ArmRight);
        this.Neck.addChild(this.Head);
        this.Chest.addChild(this.Body);
        this.Neck.addChild(this.NeckLower);
        this.Body.addChild(this.BellyFur);
        this.Body.addChild(this.HarnessHandle);
        this.Tail1.addChild(this.Tail2);
        this.LowerLegRight.addChild(this.FootRight);
        this.LowerLegLeft.addChild(this.FootLeft);
        this.Hips.addChild(this.Tail1);
        this.Head.addChild(this.Snout);
        this.Head.addChild(this.EarRight);
        this.Chest.addChild(this.Neck);
        this.ForearmRight.addChild(this.HandRight);
        this.Body.addChild(this.Hips);
        this.ThighRight.addChild(this.UpperLegRight);
        this.Hips.addChild(this.ThighLeft);
        this.Hips.addChild(this.ThighRight);
        this.Neck.addChild(this.NeckFurLeft);
        this.Tail1.addChild(this.TailFur1);
        this.Snout.addChild(this.Mouth);
        this.ArmRight.addChild(this.ForearmRight);
        this.ThighLeft.addChild(this.UpperLegLeft);
        this.ArmBaseLeft.addChild(this.ArmFurLeft);
        this.Head.addChild(this.FaceFurRight);
        this.Chest.addChild(this.ChestFur);
        this.Head.addChild(this.EarLeft);
        this.ArmLeft.addChild(this.ForearmLeft);
        this.Snout.addChild(this.TopSnout);
        this.Neck.addChild(this.Collar);
    }

    @Override
    public Iterable<ModelPart> getParts() {
        return ImmutableList.of(this.Chest);
    }

    @Override
    public void setAngles(T entity, float limbAngle, float limbDistance, float animationProgress, float headYaw, float headPitch) {

    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    private void setRotateAngle(ModelPart modelRenderer, float x, float y, float z) {
        modelRenderer.pitch = x;
        modelRenderer.yaw = y;
        modelRenderer.roll = z;
    }
}
